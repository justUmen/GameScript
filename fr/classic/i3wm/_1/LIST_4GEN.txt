#command -v lxterminal >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v i3 >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v i3status >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v qutebrowser >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v mousepad  >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v leafpad >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v pcmanfm >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v jq >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v feh >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v wmctrl >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#command -v xdotool >/dev/null 2>&1 || { echo "Veuillez installer les dépendances requises. Faites en tant qu'administrateur : apt-get install i3 i3status qutebrowser mousepad leafpad pcmanfm jq feh wmctrl xdotool lxterminal" >&2; exit 3; }
#mkdir ~/.config 2>/dev/null
#mkdir ~/.config/i3 2>/dev/null
#[ -f "$HOME/.config/i3/config_GS_backup" ] && [ ! -f "$HOME/.GameScript/i3wm_1_installed" ] && echo "$HOME/.config/i3/config_GS_backup existe déjà sur votre système, veuillez le renommer ou le supprimer pour continuer." && exit
#[ -f "$HOME/.i3/config_GS_backup" ] && [ ! -f "$HOME/.GameScript/i3wm_1_installed" ] && echo "$HOME/.i3/config_GS_backup existe déjà sur votre système, veuillez le renommer ou le supprimer pour continuer." && exit
#if [ ! -f "$HOME/.GameScript/i3wm_1_installed" ]; then [ -f "$HOME/.config/i3/config" ] && mv $HOME/.config/i3/config $HOME/.config/i3/config_GS_backup && echo "Votre fichier de configuration $HOME/.config/i3/config a été renommé en $HOME/.config/i3/config_GS_backup"; [ -f "$HOME/.i3/config" ] && mv $HOME/.i3/config $HOME/.i3/config_GS_backup && echo "Votre fichier de configuration $HOME/.i3/config a été renommé en $HOME/.i3/config_GS_backup"; touch $HOME/.GameScript/i3wm_1_installed;wget https://raw.githubusercontent.com/justUmen/GameScript/master/fr/classic/i3wm/_1/config -O ~/.config/i3/config &> /dev/null; rm $HOME/.GameScript/restore_i3wm1; echo "SUCCES : Veuillez maintenant fermer votre environment habituel et lancez i3 normalement : Déconnexion et sélection de i3 dans votre Display Manager (lightdm, gdm, xdm...). GameScript sera là pour vous accueillir. :-)"; exit; fi
#mkdir $HOME/.GameScript_i3wm_1 &> /dev/null
#cd $HOME/.GameScript_i3wm_1
#gamescript_window=$(xdotool getwindowfocus)
Dans un ${voc}gestionnaire de fenêtres${reset} (anglais ${voc}Window Manager${reset}), il y a deux choses que vous devez apprendre à manipuler, les espaces de travail (anglais ${voc}Workspaces${reset}) et les fenêtres (anglais ${voc}Windows${reset}).
Commençons par les ${voc}espaces de travail${reset}. Ici je vais vous donnez mes configurations, mais libre à vous de les modifier plus tard.
Vous pouvez avoir plusieurs espaces de travail, et chacun pourra avoir ses propres configurations et ses propres objectifs.
Si vous regardez en bas à gauche de votre écran vous devriez voir le chiffre 1 dans un carre.
Le 1 est en fait le nom/numéro de l'espace de travail où vous êtes en ce moment.
Cet espace de travail pour l'instant ne contient que la fenêtre du terminal qui contient GameScript.
Le gestionnaire de fenêtres i3 (${voc}i3wm${reset}) se base sur des combinaisons de touches pour fonctionner.
Elles sont toutes personnalisables, mais je vais vous en donner certaines que je vous conseille de garder.
Vous pouvez passer d'un espace de travail à l'autre avec la touche 'Super', parfois appelée par certains novices : 'touche windows'.
Il faudra en même temps appuyer sur la touche 'Super' et le numéro de l'espace de travail ou vous voulez aller.
Gamescript est en ce moment dans l'espace de travail 1, souvenez vous donc que pour continuer à interagir avec GameScript, il vous faudra faire 'Super + 1'.
+Maintenant, déplacez vous dans l'espace de travail 2 avec Super + 2, regardez la liste de vos espaces de travail en bas à gauche votre écran, puis faites 'Super + 1' pour revenir sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
De retour dans l'espace de travail 1, vous pouvez remarquer que l'espace de travail 2 n'est pas affiché en bas à gauche.
Pourtant lorsque vous étiez dans l'espace de travail 2, l'espace de travail 1 était visible dans cette liste.
En fait, i3 se débarassera automatiquement de tous les espaces de travail qui ne contiennent pas de fenêtres.
L'espace de travail 2 étant pour le moment vide, il ne restera pas affiché dans cette liste.
Contrairement à l'espace de travail 1, qui contient la fenêtre de GameScript.
Je vous conseille d'utiliser des raccourcis clavier pour tous les programmes que vous utilisez regulièrement.
Par exemple, pour ouvrir un nouveau terminal, il faudra utiliser le raccourci clavier 'Super + Entrée'.
On va commencer par créer une nouvelle fenêtre dans cet espace de travail 2.
+Déplacez vous dans l'espace de travail 2 avec 'Super + 2', ouvrez un nouveau terminal dans cet espace de travail avec 'Super + Entrée', puis revenez sur GameScript avec 'Super + 1'.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
De retour dans l'espace de travail 1, vous pouvez remarquer que l'espace de travail 2 est cette fois dans la liste, car maintenant il n'est plus vide.
Vous pouvez également utiliser votre souris et cliquer sur le nom de l'espace de travail où vous voulez vous rendre.
+Utilisez la liste en bas en gauche pour vous rendre sur l'espace de travail 2, fermez ce terminal et revenez sur GameScript en utilisant votre souris.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
Regardez maintenant la barre bleu en haut de votre écran : elle contient le titre de la fenêtre qui contient GameScript.
Bien évidemment, il est possible d'avoir plusieurs fenêtres dans un même espace de travail.
#i3-msg 'exec lxterminal' &>/dev/null; while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done; i3-msg focus left
Je viens d'ouvrir un nouveau terminal dans votre espace de travail, vous devriez maintenant voir deux onglets différents en haut de votre écran.
Chaque onglet correspond a une fenêtre, celui de gauche en bleu est le titre de la fenêtre de gamescript.
Les titres de fenêtres s'affichent de gauche à droite, des plus anciennes aux plus récentes.
Chaque nouvelle fenêtre s'ajoutera donc a droite des onglets deja présents.
Le terminal qui contient GameScript ayant été ouvert en premier, il restera le plus à gauche.
+Cliquez sur l'onglet de la deuxième fenêtre pour l'afficher, et revenez sur gamescript en cliquant sur le premier onglet.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done;sleep 1;while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
Bien évidemment, je vous conseille d'utiliser votre clavier pour faire cela bien plus rapidement, vous pouvez tout simplement utiliser 'Super + flèche de gauche/droite'.
+Faites le donc maintenant, utilisez 'Super + la flèche de droite' pour cibler la seconde fenêtre et revenez sur GameScript avec 'Super + flèche de gauche'.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done;sleep 1;while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
Quand vous ciblez une autre fenêtre, on dit que cette fenêtre a le ${voc}focus${reset}.
C'est à dire que tout autre raccourci clavier sera envoyé à la fenêtre qui a le focus en ce moment.
Par exemple, pour fermer une fenêtre, la combinaison de touche est 'Super + Shift + q', mais attention à ne pas fermer Gamescript par erreur !
+Changez le focus avec 'Super + flèche de droite', et fermez le deuxième terminal que j'ai ouvert tout à l'heure avec 'Super + Shift + q'.
#gamescript_window=$(xdotool getwindowfocus)
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#to_close=$(xdotool getwindowfocus)
#while [ `xdotool search --class ""|grep "^$to_close$"` ];do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
+Maintenant, ouvrez un nouveau terminal avec 'Super + Entrée', vous remarquerez alors que le focus changera automatiquement en faveur de cette nouvelle fenêtre, il vous faudra donc manuellement revenir sur GameScript.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#while [ `xdotool getwindowfocus` != $gamescript_window ];do sleep .5; done
Il y a 3 modes d'affichage des fenêtres sur i3.
Ici, l'affichage est en ${voc}onglet${reset}, mais vous pouvez aussi avoir une ${voc}liste${reset} des fenêtres de haut en bas, où le titre des fenêtres prendra toute la ligne.
Mais pour passer d'une fenêtre à l'autre dans ce mode, il faudra utiliser 'Super + flèche du haut/bas' au lieu de gauche et droite.
+Essayez donc ce mode d'affichage maintenant en faisant 'Super + s', et naviguez entre les deux fenêtres avec 'Super + flèche du haut/bas'.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#while [ `xdotool getwindowfocus` != $gamescript_window ];do sleep .5; done
Revenez maintenant au mode d'affichage en onglet en faisant 'Super + w'.
Et enfin vous avez un troisième mode d'affichage, qui affiche toutes vos fenêtres de votre espace de travail dans un ${voc}damier${reset}.
Essayez ce mode d'affichage en faisant 'Super + e'.
En étant dans ce mode, vous pouvez continuer à utiliser 'Super + e' pour alterner entre découpage vertical et horizontal.
Faites donc 'Super + e' jusqu'à avoir le nouveau terminal en dessous de la fenêtre de GameScript.
Ici même si les deux fenêtres sont visibles a l'écran, seulement l'une d'entre elles a le focus.
Ici la fenêtre qui a le focus a sa barre de titre ainsi que ses contours colorés en bleu.
Toujours de la même maniere, vous pouvez changer le focus avec 'Super + les flèches de votre clavier'.
+Donnez le focus à la fenêtre du bas et lancer la commande ${learn}ls${reset} dedans, puis redonnez le focus à la fenêtre de GameScript.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#while [ `xdotool getwindowfocus` != $gamescript_window ];do sleep .5; done
Vous pouvez remarquer qu'avec ce mode d'affichage, il est aussi possible de changer la fenêtre focus avec le curseur de votre souris.
Notez que seul le mouvement de votre curseur est nécessaire pour ce changement de focus, vous n'avez pas besoin de cliquer.
+Essayez donc d'alterner le focus entre les deux fenêtres juste en déplacant votre souris.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#while [ `xdotool getwindowfocus` != $gamescript_window ];do sleep .5; done
Bien évidemment, comme tout ce que vous faites dans i3, je vous conseille d'utiliser votre souris au minimum et de privilégier vos raccourcis clavier.
Attention, après cette phrase, la fenêtre de GameScript disparaitra... et il vous faudra la retrouver pour continuer !!
#i3-msg 'move window to workspace 5' &>/dev/null
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 5 ]; do sleep .5; done
Félicitations, vous avez retrouvé GameScript dans l'espace de travail 5 !
Vous savez déjà comment passer d'un espace de travail à l'autre, mais il est aussi possible de déplacer vos fenêtres dans un autre espace de travail.
+Remettez donc la fenêtre de GameScript dans l'espace de travail 1 avec 'Super + Shift + 1', puis revenez sur l'espace de travail 1 pour retrouver GameScript et continuer.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
Vous pouvez remarquer que la fenêtre de GameScript est désormais en dessous, car elle est devenu la fenêtre la plus récente sur cet espace de travail.
Si l'affichage était en onglet, GameScript serait donc dans l'onglet le plus à droite.
Avoir plusieurs espaces de travail différents vous permet d'organiser vos fenêtres selon votre volonté.
Personnelement, j'utilise l'espace de travail 1 pour mon terminal principal, qui doit toujours être opérationnel rapidement.
J'utilise l'espace de travail 2 pour mes éditeurs de texte.
J'utilise l'espace de travail 3 pour mes navigateur web et autres fenêtres orientés web.
J'utilise l'espace de travail 4 pour mes gestionnaires de fichiers.
Et j'utilise l'espace de travail 5 pour tout ce qui est social : email, notre rocketchat, notre discord, etc...
Organiser vos fenêtres par thème vous permet de les retrouver très rapidement, même si elles sont très nombreuses.
#gamescript_window=$(xdotool getwindowfocus)
+Fermez la fenêtre du dessus pour continuer.
#while [ `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#to_close=$(xdotool getwindowfocus)
#while [ `xdotool search --class ""|grep "^$to_close$"` ];do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
#echo -e "<html>\\\\n\\\\t<head>\\\\n\\\\t\\\\t<link rel="stylesheet" href="style.css">\\\\n\\\\t</head>\\\\n\\\\t<body>\\\\n\\\\t\\\\t<h1>GameScript</h1>\\\\n\\\\t\\\\t<div>bonjour</div>\\\\n\\\\t</body>\\\\n</html>" > ~/.GameScript_i3wm_1/index.html
#echo -e "h1{color:red;}" > ~/.GameScript_i3wm_1/style.css
#i3-msg exec leafpad ~/.GameScript_i3wm_1/index.html &>/dev/null
#i3-msg exec qutebrowser ~/.GameScript_i3wm_1/index.html &>/dev/null
#i3-msg exec pcmanfm ~/.GameScript_i3wm_1/ &>/dev/null
Je viens de préparer pour vous un exemple complet, avec une fenêtre par espace de travail.
Cet exemple utilise mes configurations personnelles, mais libre à vous d'avoir votre propre organisation plus tard, en fonction des programmes que vous utilisez le plus souvent.
+L'espace de travail 2 contient un fichier index.html ouvert dans un éditeur de texte (leafpad), visitez cet espace de travail avant de revenir sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
+L'espace de travail 3 contient le même fichier html ouvert dans un navigateur web (qutebrowser), visitez cet espace de travail avant de revenir sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 3 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
+Et enfin, l'espace de travail 4 contient un gestionnaire de fichier (pcmanfm) ouvert dans le dossier qui contient ce fichier html. Visitez cet espace de travail avant de revenir sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 4 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
#while [ ! `xdotool getwindowfocus` = $gamescript_window ];do sleep .5; done
Donc au lieu d'avoir 4 fenêtres différentes, vous avez ici 4 espaces de travail contenant chacun une fenêtre.
+Modifiez le mot 'bonjour' du fichier html par le mot 'bonsoir' dans l'espace de travail 2, sauvegardez le fichier, puis revenez sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
+Affichez maintenant le changement en actualisant votre navigateur web dans l'espace de travail 3, puis revenez sur GameScript. (Touche F5)
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 3 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
+Allez maintenant sur l'espace de travail 4 et ouvrez le fichier "style.css" avec leafpad en faisant clic droit sur le fichier, ouvrir avec, Leafpad, puis revenez sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 4 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
Vous avez surement remarqué que leafpad ne s'est pas ouvert dans l'espace de travail 4, mais dans l'espace de travail 2 !
C'est en fait parce que j'ai configuré votre i3 pour que cela soit le cas.
Votre espace de travail 2 devrait d'ailleurs être en ce moment de couleur rouge.
Ce rouge veut dire qu'une nouvelle fenêtre vient de s'ouvrir dans cet espace de travail, et cette couleur restera rouge tant que cette fenêtre n'aura pas recu de focus.
+Modifiez donc ce fichier 'style.css' en changeant 'red' par 'blue', enregistrez les modifications, verifiez l'effet de vos changements dans l'espace de travail 3 avec F5 et revenez sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 3 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
Avec i3, il est donc possible de contrôler dans quel espace de travail se lance quel programme.
'leafpad' étant un éditeur de texte, nous voulons qu'il soit sur l'espace de travail 2 par défaut.
Ce genre d'envie doit être écrit dans le fichier de configuration d'i3 : ${code}$HOME/.config/i3/config${reset}
Pour ouvrir systématiquement 'leafpad' dans l'espace de travail 2, j'ai ajouté dans votre fichier de configuration la ligne : ${code}assign [class=\\"Leafpad\\"] workspace 2${reset}
+Essayez donc de faire la même chose avec 'mousepad', un autre éditeur de texte : ${learn}echo 'assign [class=\\"Mousepad\\"] workspace 2'>>~/.config/i3/config${reset}
!echo 'assign [class=\\"Mousepad\\"] workspace 2'>>~/.config/i3/config
+Lancez maintenant 'mousepad' en le détachant du terminal de GameScript et ignorant ses erreurs en faisant : ${learn}mousepad&>/dev/null&${reset}
!mousepad&>/dev/null&
Vous pouvez remarquer que 'mousepad' s'est ouvert sur l'espace de travail 1, ce qui n'est pas vraiment ce qui était prévu.
Pour que vos modifications soit prises en compte, il vous faudra ${voc}réactualiser${reset} le fichier de configuration avec : 'Super + Shift + c', faites le donc maintenant avant de continuer.
Après avoir fait 'Super + Shift + c', vous devriez voir l'interface d'i3 clignoter pendant un bref instant.
Mais notre fenêtre de 'mousepad' est toujours dans l'espace de travail 1, car 'assign' n'aura d'effet que pour les nouvelles fenêtres.
Fermez donc cette fenêtre de 'mousepad' avant de continuer.
A partir de maintenant, toutes les instances de 'mousepad' seront automatiquement lancées dans l'espace de travail 2.
+Lancez donc mousepad à nouveau avec : ${learn}mousepad&>/dev/null&${reset}
!mousepad&>/dev/null&
Vous êtes toujours en ce moment dans l'espace de travail 1, mais vous devriez voir l'espace de travail 2 s'illuminer en rouge.
+Trouvez et fermez cette nouvelle fenêtre de 'mousepad' avant de continuer.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 2 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
+Ouvrez donc maintenant 'galculator' avec ${learn}galculator&>/dev/null&${reset} et revenez sur gamescript.
!galculator&>/dev/null&
Vous pouvez remarquer que cette fenêtre remplira la moitié de votre écran, ce qui n'est pas vraiment pratique pour ce genre de fenêtre...
Dans ce genre de situation, il existe un mode particulier dit ${voc}flottant${reset} (anglais floating${reset}), que vous pouvez activer et désactiver avec la combinaison de touche 'Super + Shift + Espace'.
Après avoir 'focus' la calculatrice, utilisez donc cette combinaison de touche pour la rendre indépendante des autres.
Vous pouvez remarquer que sur i3 une fenêtre flottante est toujours au premier plan, même si le focus est sur une autre fenêtre !
Mais ce changement pour une fenêtre flottante est temporaire et n'affectera que cette instance de galculator !
Pour que 'galculator' soit toujours en mode flottant, il va falloir encore une fois modifier le fichier de configuration.
Le code ${code}assign [class=\\"Leafpad\\"] workspace 2${reset} que nous avons déjà vu, cible toutes les nouvelles instances de leafpad en utilisant en argument ${code}class${reset} qui est égal à ${code}Leafpad${reset}.
Pour connaitre la classe (anglais ${voc}class${reset}) d'une fenêtre vous pouvez utiliser la commande : ${code}xprop${reset}.
+Tapez donc la commande ${learn}xprop${reset}, le curseur de votre souris deviendra une croix, puis cliquez sur le terminal qui contient GameScript.
!xprop
Le nom de la 'class' de la fenêtre que vous avez ciblée est le deuxième nom de la ligne qui commence par 'WM_CLASS'.
Si seul cette ligne vous intéresse, vous pouvez utiliser ${code}grep${reset}.
+Faites donc ${learn}xprop|grep CLASS${reset} et cliquez sur la calculatrice pour récuperer le nom de sa 'class'.
!xprop|grep CLASS
Votre résultat devrait être : ${code}WM_CLASS(STRING) = \\"galculator\\", \\"Galculator\\"${reset}
La ${code}class${reset} est ici la deuxième chaine de caractères : ${code}\\"Galculator\\"${reset}
Pour que la ${code}class${reset} qui correspond à ${code}Galculator${reset} soit systématiquement en mode flottant, il faudra ajouter dans le fichier de configuration : ${code}for_window [class=\\"Galculator\\"] floating enable${reset}
Si vous voulez que votre fenêtre flottante soit présente sur tous les espaces de travail (${voc}collante${reset}, anglais ${voc}sticky${reset}), il vous faudra utiliser ${code}sticky enable${reset}.
${code}for_window${reset} accepte plusieurs paramètres, que vous pouvez séparer par des virgules.
Pour que la 'class' ${code}Galculator${reset} soit à la fois flottante et présente sur tous les espaces de travail, il faudra donc faire : ${code}for_window [class=\\"Galculator\\"] floating enable, sticky enable${reset}
+Fermez la calculatrice et faites : ${code}echo 'for_window [class=\\"Galculator\\"] floating enable, sticky enable'>>~/.config/i3/config${reset}
!echo 'for_window [class=\\"Galculator\\"] floating enable, sticky enable'>>~/.config/i3/config
+Affichez les deux dernières lignes de votre fichier de configuration avec : ${learn}tail -n 2 ~/.config/i3/config${reset}
!tail -n 2 ~/.config/i3/config
Bien sur, n'oubliez pas de réactualiser le fichier de configuration maintenant avec Super + Shift + c.
+Apres avoir réactualisé le fichier de configuration, relancez donc 'galculator' avec : ${learn}galculator&>/dev/null&${reset}
!galculator&>/dev/null&
Ici vous pouvez voir que la calculatrice est maintenant en mode flottant grâce au code ${code}floating enable${reset}.
Mais si vous essayez de changer d'espace de travail, vous verrez qu'avec le code ${code}sticky enable${reset} la fenêtre vous suivra.
Déplacez vous donc dans l'espace de travail 5 et revenez sur GameScript.
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 5 ]; do sleep .5; done
#while [ `i3-msg -t get_workspaces | jq -r 'map(select(.focused))[0].name'` != 1 ]; do sleep .5; done
Vous pouvez noter que le mode 'sticky' ne fonctionne que si pour les fenêtres flottantes.
Notez également que pour déplacer cette fenêtre flottante, vous pouvez maintenir la touche 'Super' et le bouton gauche de votre souris enfoncés.
Essayez donc de déplacer la calculatrice en maintenant la touche 'Super' enfoncée, vous n'avez pas besoin de cliquer sur la barre de titre.
Il n'est cependant pas très pratique d'avoir à lancer toutes les applications à partir d'un terminal.
C'est pourquoi un ${voc}lanceur d'application${reset} (anglais ${voc}run dialog${reset}) est un outil très important dans i3 !
Nous allons donc créer notre premier raccourci clavier personnalisé pour ce lanceur d'application.
Pour créer un nouveau raccourci clavier, il faudra utiliser ${code}bindsym${reset}. ('bind' est l'anglais de 'lier')
Pour cet exemple nous utiliserons comme lanceur d'application : ${code}rofi${reset}, plus précisement la commande ${code}rofi -show run${reset} et la combinaison de touche 'Alt + F2'.
Si vous voulez lancez un autre programme il faudra précéder la commande par le mot clef ${code}exec${reset} dans le fichier de configuration.
Pour i3, la touche 'Alt' est ${code}mod1${reset}, et la touche 'Super' est ${code}mod4${reset}. Le code de configuration sera donc : ${code}bindsym mod1+F2 exec rofi -show run${reset}
+Ajoutez donc ce code à la suite de votre fichier de configuration avec : ${learn}echo 'bindsym mod1+F2 exec rofi -show run'>>~/.config/i3/config${reset}
!echo 'bindsym mod1+F2 exec rofi -show run'>>~/.config/i3/config
Et enfin, réactualisez votre fichier de configuration avec 'Super + Shift + c'.
Faites maintenant 'Alt + F2' pour lancer ${code}rofi -show run${reset}, et exécutez 'galculator' avec.
Voila donc trois examples pour les trois configurations les plus fondamentales d'i3 : ${code}assign${reset}, ${code}for_window${reset} et ${code}bindsym${reset}.
+Pour un rappel de syntaxe, affichez les 3 lignes de configurations que nous avons ajoutées dans ce chapitre avec : ${learn}tail -n 3 ~/.config/i3/config${reset}
!tail -n 3 ~/.config/i3/config
${code}assign${reset} est utilisé pour lier certaines fenêtres à un certain espace de travail.
${code}for_window${reset} est utilisé pour donner une configuration particulière à certaines fenêtres.
Et enfin ${code}bindsym${reset} est utilisé pour lancer d'autres commandes directement avec une combinaison de touche.
Vous pouvez maintenant fermer les calculatrices.
Bien évidemment tous les combinaisons de touche que vous utilisez sont personnalisables.
Par exemple, pour recharger votre fichier de configuration vous devez faire : 'Super+Shift+c'.
+Mais ce code est modifiable comme tous les autres dans votre fichier de configuration. Faites donc : ${learn}grep reload ~/.config/i3/config${reset}
!grep reload ~/.config/i3/config
Ici vous devriez voir le "bindsym" responsable de cette combinaison de touche, mais libre à vous de le modifier si vous le désirez.
+Par exemple, pour voir la ligne responsable pour quitter i3, faites : ${learn}grep exit ~/.config/i3/config${reset}
!grep exit ~/.config/i3/config
Essayez de faire maintenant 'Super + Shift + e' pour voir ce code en action : vous recevrez un message demandant votre confirmation, cliquez ensuite sur la croix pour annuler la fermeture de i3.
Et si par exemple vous voulez lancer 'nm-applet' au démarrage d'i3, il suffit de mettre dans votre fichier de configuration : ${code}exec nm-applet${reset}.
'nm-applet' est une interface graphique capable de gérer les configurations réseaux de 'NetworkManager'. (Installable avec le paquet 'network-manager-applet' sur Arch et 'network-manager-gnome' sur Debian.)
L'utilisation des raccourcis clavier peut vous paraitre étrange pour le moment, mais faites moi confiance, vous ne pourrez bientôt plus vous en passer !
#i3-msg exec 'mousepad ~/.config/i3/config'
Avant d'en finir avec ce chapitre, je viens d'ouvrir pour vous le fichier de configuration d'i3 dans l'espace de travail 2.
Pour éviter que 'GameScript i3wm' ne se lance au démarrage à chaque fois, supprimez la première ligne contenant le code 'exec'.
C'est tout pour cette fois, dans le prochain chapitre nous verrons comment contrôler avec précision l'organisation de nos fenêtres.
En avant pour le questionnaire !
#clean
