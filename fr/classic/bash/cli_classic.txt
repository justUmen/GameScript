BASED ON ../KNOWLEDGE/CLI.txt

VIDEO : CLI vs GUI
why learn this ?

HELP IF STUCK ? POSSIBLE ???

COLOR : commands, syntaxe linux (chemins...), words + english word


Bash 0 => Concepts : OS , terminal , CLI vs GUI , 


[1] ARG some dont have : "pwd ." (Too many arguments, one is too many)
		some can have several "ls / /home"
[1] no output = no mistake
[1] [parent / child relationship (more about path)
[1] absolute path
[1] relative path
[1] "pwd"
[1] "ls"
[1] "cd"
[1] ".."
[1] "mkdir"
[1] "rm"
[1] "rmdir"
Bash 1 => Concepts : commande , argument , chemin relatif , chemin absolu , dossier parent/enfant , répertoire courant
Bash 1 => Code : pwd , ls , cd , .. , mkdir , rm , rmdir


[2] "~"
[2] ".hidden"
[2] "../"
[2] "../../"
[2] "."
[2] command line argument(s) "ls ../../"
	command line options (dash) "ls -l /" or "ls / -l"
		options often have long and short names
			sometimes options have values "ls --sort=size"
[2] "man" RTFM (you shouldnt ask someone about something that is in the manual)
	if you want to do something, check the manual first,
		if you cant find your answer then you can ask for help
Bash 2 => Concepts : fichier caché, option, RTFM
Bash 2 => Code : ~ , . , ../ , ../.. , ../../ , - , --, man


[3] "echo"
[3] "\"
[3] "\n"
[3] ">"
[3] ">>"
[3] "cat"
[3] "" and ''
Bash 3 => Concepts : caractère d'échappement , délimiteur d'argument
Bash 3 => Code : echo , \ , \n , > , >> , cat , "", ''


[4] "mv"
[4] "cp"
[4] ";"
[4] "&&"
[4] "||"
Bash 4 => Concepts : condition de succès , condition d'échec
Bash 4 => Code : mv , cp , ; , && , ||


[5] "ls -l" permissions "-rw-r--r--" and so on ...
[5] how to identify if an element is a directory or a file ?
[5] "chmod" + letters
Bash 5 => Concepts : permissions et limitations
Bash 5 => Code : ls -l , chmod


[6] "*"
[6] "?" != vide
[6] ls -l : metadata
[6] "touch"
[6] "chmod" + numbers
[6] "chown"
Bash 6 => Concepts : donnée , métadonnée
Bash 6 => Code : * , ? , touch , chown , chmod


[7] stdout
[7] stderr
[7] "()"
[7] "1>"
[7] "2>"
[7] "&>"
[7] "1>>"
[7] "2>>"
[7] "&>>"
[7] "/dev/null"
[7] "2>&1"
[7] "1>&2"
Bash 7 => Concepts : sortie standard , erreur standard , regroupement de flux
Bash 7 => Code : 1> , 2> , &> , 1>> , 2>> , &>> , /dev/null , 2>&1 , 1>&2 , ()


[8] wc
[8] sort
[8] grep
[8] uniq
[8] stdin
[8] -
[8] "|", like ">" but for other commands (pipe standard)
[8] "|&" (pipe standard + error)
[8] "<" + filename
[8] command < input-file > output-file
Bash 8 => Concepts : entrée standard , pipe
Bash 8 => Code : | , wc , sort , grep , uniq , - , |& , <


[9] $
[9] =
[9] which
[9] printenv
[9] PATH
[9] alias
[9] less
[9] $?
Bash 9 => Concepts : variable , alias , PATH , PAGER
Bash 9 => Code : which , $ , = , printenv , $PATH , alias , less , $PAGER , $?




stdout buffered 4096 bytes or \n
stderr unbuffered
# line buffered
grep pat file.log
# fully buffered
grep pat file.log > output

$!, $1...$x, $@ : script only

POSIX

set
env

export ?

$$ = process number + kill -9

+Affichez la taille en octets du fichier 'test'. (ls -l) + wc + ASCII + UTF-8

global : exec 2> /dev/null


find

strace, syscalls counter

mtime, ctime, atime : "ls -l --time=atime"

more info on permissions. exec binary, folders x, parent permissions...

"file"
taille des fichier en octets, ASCII

[a-z]
"nano"
"&" use same time as "ps" ?

"head *" clean output better than cat, or even : grep "" *
"less *" -n ofc

regex
(( var0 = var1<98?9:21 ))

"." (useful to execute)
":" do nothing
"!" inversion (! true )

recursive
"du"
MAKE SCRIPTS INSTEAD OF ONE LINE :p
"!!"
history + "!2892"


{1..100}

"ls -v" numerical order

"-" argument file ??????????

.txt extensions, MIME

#ADD THE OTHERS HERE (top), SO FULL LIST TO AD TO THE WIKI :p
#files
"ln"
"printf" :P
#text show
"cat","tac","nl","head","tail","more","less"
#text manipulation
"echo","grep","awk","cmp","comm","diff","diff3","cut","csplit","sdiff"
"fold","fmt","expand","unexpand","paste","join","wc","sort","sed","tr","uniq"
"col"
#Shortcuts and tricks
CTRL + E / A, TAB, Arrow top / down
#SYSTEM informations or control
"df","fdisk","free","env","hostname","id","uname -a","tty"
"shutdown","reboot"
"systemctl","journalctl"
#PROCESSES
"ps","kill","pkill","top","pidof"
"pstree" ? native
"nohup","nice"
"screen"
#files
"touch","tee"
"split"
"dd"
"find","locate"("updatedb")
"whereis","which"
#USERS
"adduser","usermod","users","groups","passwd"
"who","w"
"su"
#COMPRESSION
"gzip","tar"
#NETWORK
"ifconfig","route","iptables","traceroute","ip","netstat"
"wget"
"curl" ?????
#NETWORK LINKS
"ssh" & co, "scp", "rsync"
#STORAGE
"mount","umount"
#MISC
"tty","sleep","time","history","date","cal","clear","cron", "crontab","expr","bc"
"md5sum"
"info"
"dc","bc"
"watch"
"sync" ??? find good example
"namei"
"bind"

#MOST USEFUL IN SCRIPT BASH
"true","false" usefulness ??
"while","for"
``, '', "", $(xxx)

CTRL+R, CTRL+S ??? more ???



# TILING TERMINALS ??
- use tiling manager (i3, awesome)
- use terminator
* use tmux
#




fsck	Filesystem consistency check and repair	???????????????
mkfifo	Make FIFOs (named pipes)	???????????????/
mknod	Make block or character special files	 ????????????????
symlink	Make a new name for a file	??????????????
tsort	Topological sort	 ?????





POSIX
